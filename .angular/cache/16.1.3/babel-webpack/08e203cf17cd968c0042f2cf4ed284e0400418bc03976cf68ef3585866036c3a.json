{"ast":null,"code":"import * as i0 from \"@angular/core\";\nconst HOUR = 60;\n// TODO: this too\nconst DAY = 24 * 60;\nexport let TimeDurationPipe = /*#__PURE__*/(() => {\n  class TimeDurationPipe {\n    transform(value, ...args) {\n      let days = Math.floor(value / DAY);\n      let afterDays = value % DAY;\n      let hours = Math.floor(afterDays / HOUR);\n      let minutes = afterDays % HOUR;\n      // TODO: should support days?\n      // TODO: if not, comment the above lines and uncomment this\n      // let hours = Math.floor(value / HOUR);\n      // let minutes = value % HOUR;\n      let answer = '';\n      if (days) {\n        // TODO: if not supporting days comment this case too\n        answer = days + 'd' + ' ' + hours + 'h' + ' ' + minutes + 'm';\n      } else if (hours) {\n        answer = hours + 'h' + ' ' + minutes + 'm';\n      } else {\n        answer = minutes + 'm';\n      }\n      return answer;\n    }\n  }\n  TimeDurationPipe.ɵfac = function TimeDurationPipe_Factory(t) {\n    return new (t || TimeDurationPipe)();\n  };\n  TimeDurationPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"timeDuration\",\n    type: TimeDurationPipe,\n    pure: true\n  });\n  return TimeDurationPipe;\n})();","map":{"version":3,"names":["HOUR","DAY","TimeDurationPipe","transform","value","args","days","Math","floor","afterDays","hours","minutes","answer","pure"],"sources":["C:\\Users\\elior\\WebstormProjects\\quest\\src\\app\\pipes\\time-duration.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\nconst HOUR: number = 60;\n// TODO: this too\nconst DAY: number = 24*60;\n\n@Pipe({\n  name: 'timeDuration'\n})\nexport class TimeDurationPipe implements PipeTransform {\n\n  transform(value: number, ...args: unknown[]): string {\n    let days = Math.floor(value / DAY);\n    let afterDays = value % DAY;\n    let hours = Math.floor(afterDays / HOUR);\n    let minutes = afterDays % HOUR;\n\n    // TODO: should support days?\n    // TODO: if not, comment the above lines and uncomment this\n    // let hours = Math.floor(value / HOUR);\n    // let minutes = value % HOUR;\n\n    let answer = '';\n    if (days) {\n      // TODO: if not supporting days comment this case too\n      answer = days + 'd' + ' ' + hours + 'h' + ' ' + minutes + 'm'\n    } else if (hours) {\n      answer = hours + 'h' + ' ' + minutes + 'm'\n    } else {\n      answer = minutes + 'm'\n    }\n    return answer;\n  }\n\n}\n"],"mappings":";AAEA,MAAMA,IAAI,GAAW,EAAE;AACvB;AACA,MAAMC,GAAG,GAAW,EAAE,GAAC,EAAE;AAKzB,WAAaC,gBAAgB;EAAvB,MAAOA,gBAAgB;IAE3BC,SAASA,CAACC,KAAa,EAAE,GAAGC,IAAe;MACzC,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACJ,KAAK,GAAGH,GAAG,CAAC;MAClC,IAAIQ,SAAS,GAAGL,KAAK,GAAGH,GAAG;MAC3B,IAAIS,KAAK,GAAGH,IAAI,CAACC,KAAK,CAACC,SAAS,GAAGT,IAAI,CAAC;MACxC,IAAIW,OAAO,GAAGF,SAAS,GAAGT,IAAI;MAE9B;MACA;MACA;MACA;MAEA,IAAIY,MAAM,GAAG,EAAE;MACf,IAAIN,IAAI,EAAE;QACR;QACAM,MAAM,GAAGN,IAAI,GAAG,GAAG,GAAG,GAAG,GAAGI,KAAK,GAAG,GAAG,GAAG,GAAG,GAAGC,OAAO,GAAG,GAAG;OAC9D,MAAM,IAAID,KAAK,EAAE;QAChBE,MAAM,GAAGF,KAAK,GAAG,GAAG,GAAG,GAAG,GAAGC,OAAO,GAAG,GAAG;OAC3C,MAAM;QACLC,MAAM,GAAGD,OAAO,GAAG,GAAG;;MAExB,OAAOC,MAAM;IACf;;EAvBWV,gBAAgB,C;qBAAhBA,gBAAgB;EAAA;EAAhBA,gBAAgB,C;;UAAhBA,gBAAgB;IAAAW,IAAA;EAAA;EAAA,OAAhBX,gBAAgB;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}