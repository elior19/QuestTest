{"ast":null,"code":"import { Store } from '@ngrx/store';\nimport { SetFlights, SetWorkers } from '../store/actions';\nimport { Worker } from '../models/worker';\nimport { Flight } from '../models/flight';\nimport { FlightInformation } from '../models/flightInformation';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nexport let DataReceiverService = /*#__PURE__*/(() => {\n  class DataReceiverService {\n    constructor(store) {\n      this.store = store;\n      this.getWorkers();\n      this.getFlightsByWorkerId(1);\n    }\n    getWorkers() {\n      // cycle\n      // get data\n      let workers = Workers;\n      // add to store\n      this.store.dispatch(new SetWorkers({\n        workers\n      }));\n    }\n    getFlightsByWorkerId(workerId) {\n      // delete old interval\n      // create new interval\n      // add to store\n      let flights = Flights;\n      this.store.dispatch(new SetFlights({\n        flights\n      }));\n    }\n  }\n  DataReceiverService.ɵfac = function DataReceiverService_Factory(t) {\n    return new (t || DataReceiverService)(i0.ɵɵinject(i1.Store));\n  };\n  DataReceiverService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataReceiverService,\n    factory: DataReceiverService.ɵfac,\n    providedIn: 'root'\n  });\n  return DataReceiverService;\n})();\nconst Workers = [new Worker(1, 'a'), new Worker(2, 'b'), new Worker(3, 'c'), new Worker(4, 'd'), new Worker(5, 'e')];\nconst Flights = [new Flight('1A', 'Israel', new Date(2013, 12, 5), 'USA', new Date(2013, 12, 5), new FlightInformation(''))];","map":{"version":3,"names":["Store","SetFlights","SetWorkers","Worker","Flight","FlightInformation","DataReceiverService","constructor","store","getWorkers","getFlightsByWorkerId","workers","Workers","dispatch","workerId","flights","Flights","i0","ɵɵinject","i1","factory","ɵfac","providedIn","Date"],"sources":["C:\\Users\\elior\\WebstormProjects\\quest\\src\\app\\services\\data-receiver.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {Store} from '@ngrx/store';\nimport {SetFlights, SetWorkers} from '../store/actions';\nimport {Worker} from '../models/worker';\nimport {Flight} from '../models/flight';\nimport {FlightInformation} from '../models/flightInformation';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataReceiverService {\n\n  constructor(private store: Store<{workers: Worker[]}>) {\n    this.getWorkers();\n    this.getFlightsByWorkerId(1);\n  }\n\n  getWorkers() {\n    // cycle\n    // get data\n    let workers: Worker[] = Workers;\n    // add to store\n    this.store.dispatch(new SetWorkers({workers}));\n  }\n\n  getFlightsByWorkerId(workerId: number) {\n    // delete old interval\n    // create new interval\n    // add to store\n    let flights: Flight[] = Flights;\n    this.store.dispatch(new SetFlights({flights}));\n  }\n}\n\nconst Workers: Worker[] = [\n  new Worker(1, 'a'),\n  new Worker(2, 'b'),\n  new Worker(3, 'c'),\n  new Worker(4, 'd'),\n  new Worker(5, 'e')\n];\n\nconst Flights: Flight[] = [\n  new Flight('1A',\n    'Israel',\n    new Date(2013, 12, 5),\n    'USA',\n    new Date(2013, 12, 5),\n    new FlightInformation(\n      ''\n    )),\n\n\n];\n"],"mappings":"AACA,SAAQA,KAAK,QAAO,aAAa;AACjC,SAAQC,UAAU,EAAEC,UAAU,QAAO,kBAAkB;AACvD,SAAQC,MAAM,QAAO,kBAAkB;AACvC,SAAQC,MAAM,QAAO,kBAAkB;AACvC,SAAQC,iBAAiB,QAAO,6BAA6B;;;AAK7D,WAAaC,mBAAmB;EAA1B,MAAOA,mBAAmB;IAE9BC,YAAoBC,KAAiC;MAAjC,KAAAA,KAAK,GAALA,KAAK;MACvB,IAAI,CAACC,UAAU,EAAE;MACjB,IAAI,CAACC,oBAAoB,CAAC,CAAC,CAAC;IAC9B;IAEAD,UAAUA,CAAA;MACR;MACA;MACA,IAAIE,OAAO,GAAaC,OAAO;MAC/B;MACA,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAAC,IAAIX,UAAU,CAAC;QAACS;MAAO,CAAC,CAAC,CAAC;IAChD;IAEAD,oBAAoBA,CAACI,QAAgB;MACnC;MACA;MACA;MACA,IAAIC,OAAO,GAAaC,OAAO;MAC/B,IAAI,CAACR,KAAK,CAACK,QAAQ,CAAC,IAAIZ,UAAU,CAAC;QAACc;MAAO,CAAC,CAAC,CAAC;IAChD;;EArBWT,mBAAmB,C;qBAAnBA,mBAAmB,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAnB,KAAA;EAAA;EAAnBM,mBAAmB,C;WAAnBA,mBAAmB;IAAAc,OAAA,EAAnBd,mBAAmB,CAAAe,IAAA;IAAAC,UAAA,EAFlB;EAAM;EAAA,OAEPhB,mBAAmB;AAAA;AAwBhC,MAAMM,OAAO,GAAa,CACxB,IAAIT,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,EAClB,IAAIA,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,EAClB,IAAIA,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,EAClB,IAAIA,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,EAClB,IAAIA,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CACnB;AAED,MAAMa,OAAO,GAAa,CACxB,IAAIZ,MAAM,CAAC,IAAI,EACb,QAAQ,EACR,IAAImB,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,EACrB,KAAK,EACL,IAAIA,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,EACrB,IAAIlB,iBAAiB,CACnB,EAAE,CACH,CAAC,CAGL"},"metadata":{},"sourceType":"module","externalDependencies":[]}